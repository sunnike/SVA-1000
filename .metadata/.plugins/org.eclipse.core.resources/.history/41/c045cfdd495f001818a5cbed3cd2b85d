/*
 * aewin_def.h
 *
 *  Created on: 2018年4月15日
 *      Author: John Chen
 */

#ifndef AEWIN_DEF_H_
#define AEWIN_DEF_H_

#ifdef __cplusplus
 extern "C" {
#endif

/* Includes ------------------------------------------------------------------*/
#include "stm32f0xx_hal.h"
#include "main.h"

/* USER CODE BEGIN Includes */

/* USER CODE END Includes */


/* USER CODE BEGIN Definition */
#ifndef TRUE
	#define TRUE 	(1)
#endif

#ifndef FALSE
	#define FALSE	(0)
#endif


#define AEWIN_DBUG			1
#define PRINT_BUFF			(64U)


#define UART3_TIMEOUT		2


#define INGITION_TASK_ENTRY_TIME	(990U)


#define IWDG_TASK_ENTRY_TIME		(200U)

#define ADC_DEVICE_NUM				(2U)
#define ADC_CAP_TIME				(500U)
#define ADC_RESET_TIME				(500U)
/* USER CODE END Definition */


/* USER CODE BEGIN ENUM definitions */

typedef enum{
	IG_Reserved = 0,
	IG_Idle = 1,
	IG_PowerOn_Delay,
	IG_Wait_StartUp,
	IG_Start_Up,
	IG_Shutdown_Delay,
	IG_shutting_Down,
	IG_LowPower_Delay,
	IG_CloseUp,
	IG_End = 100
}eIgnition_States;

/* USER CODE END ENUM definitions  */



/* USER CODE BEGIN structure definitions */

typedef struct{
	uint32_t pwr_24v;
	uint32_t mcu_temp;
}sADC_DATA;



typedef struct{
	eIgnition_States IG_States;
	uint8_t	 pwron_delay;
	uint8_t	 startup_timeout;
	uint8_t  shutdown_delay;
	uint8_t  shutdown_timeout;
	uint8_t  pwroff_delay;
	uint8_t  lowpwr_dealy;
	uint8_t  wtdog_default;
	uint8_t  in_volt_min;
	uint8_t  in_volt_max;
	uint8_t  startup_volt;
	uint8_t  in_temp_min;
	uint8_t  in_temp_max;
	uint8_t  startup_temp;
	uint16_t fail_retry;
	uint16_t fail_count;
}sIG_EVENT;




typedef struct{

	uint8_t	 ig_sw			: 1;
	uint8_t  pwr_btn		: 1;
	uint8_t  sys_pwron		: 1;
	uint8_t  pwr_btn_r		: 1;
	uint8_t  dc2dc_pwrok	: 1;
	uint8_t  reserved		: 3;
}sSVA_GPI_STATE;

typedef struct{

	uint8_t	 spi1_cs 		: 1;
	uint8_t	 dc2dc_en 		: 1;
	uint8_t	 reseved 		: 6;
}sSVA_GPO_STATE;

/* USER CODE END structure definitions  */




/* USER CODE BEGIN Private defines */

/* USER CODE END Private defines */



/* USER CODE BEGIN Prototypes */
/*
int fputc(int ch, FILE *f);
int getc(FILE *f);
*/


#if (AEWIN_DBUG)
	void aewin_dbg(char *fmt,...);
	#define printf		aewin_dbg
#else
    #define aewin_dbg(var,...)
#endif

/* USER CODE END Prototypes */



#ifdef __cplusplus
}
#endif




#endif /* AEWIN_DEF_H_ */
